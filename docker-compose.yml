services:
  srs:
    image: ossrs/srs:5                                          # Use the official SRS Docker image
    container_name: srs
    ports:
      - "1935:1935"                                             # RTMP & WebRTC signaling
      - "1985:1985"                                             # HTTP API and statistics
      - "8080:8080"                                             # HLS/LL-HLS
      - "10080:10080/udp"                                       # WebRTC media transport (UDP)
    volumes:
      - ./config/srs.conf:/usr/local/srs/conf/srs.conf          # Map custom SRS config
    environment:
      CONFIG_PATH: /usr/local/srs/conf/srs.conf                 # Path to the SRS config file
      SRS_PATH: /usr/local/srs/objs/srs                         # Path to the SRS binary
    command: ["./objs/srs", "-c", "conf/srs.conf"]              # Start SRS with your config

  chronocast-server:
    build:
      context: .                                                # Build the Go application from the current directory
    container_name: chronocast-server
    ports:
      - "8081:8081"                                             # Expose the API server
    environment:
      CONFIG_PATH: /usr/local/srs/conf/srs.conf                 # Pass the SRS config path to the Go app
      SRS_PATH: /usr/local/srs/objs/srs                         # Pass the SRS binary path to the Go app
      GO_SERVER_PORT: ":8081"                                   # Set the Go Se
    depends_on:
      - srs                                                     # Ensure the SRS server starts before the Go app
    volumes:
      - .:/app                                                  # Mount the current directory into the container
    working_dir: /app                                           # Set the working directory inside the container
    command: ["go", "run", "./cmd/chronocast-server/main.go"]   # Run the Go application